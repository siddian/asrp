/*
 * Epaper.cpp
 *
 *  Created on: 27.12.2012
 *      Author: siddian
 */

#include "Epaper.hpp"

#include "wiringPi.h"
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

Epaper::Epaper() {
	mRunning = true;
	//TODO: read this from a config file
	mChannel = 0;
	mFreq = 8000000;
	mCSPin = 3;
	mENPin = 2;

	if (wiringPiSPISetup (mChannel, mFreq) < 0) {
		fprintf(stderr, "SPI Setup failed: %s\n", strerror (errno));
		mRunning = false;
	}
	if (wiringPiSetup() < 0) {
		fprintf(stderr, "Wiring Setup failed: %s\n", strerror (errno));
		mRunning = false;
	}

	if (mRunning) {
		pinMode(mCSPin, OUTPUT);
		digitalWrite(mCSPin, HIGH);

		pinMode(mENPin, OUTPUT);
		digitalWrite(mENPin, LOW);
	}
}

void Epaper::sendData(uint8_t registerIndex, uint8_t* data, size_t datasize) {
	//helper variables
	uint8_t msg[1] = {0x70};
	//defined page 15
	digitalWrite(mCSPin, HIGH);
	delayMicroseconds(10);
	digitalWrite(mCSPin, LOW);
	//header
    wiringPiSPIDataRW (mChannel, msg, 1);
    //index
    msg[0] = registerIndex;
    wiringPiSPIDataRW (mChannel, msg, 1);
    //switch enable off and on again
	digitalWrite(mCSPin, HIGH);
	delayMicroseconds(10);//TODO: at least 10 us!
	digitalWrite(mCSPin, LOW);
	//second header
    msg[0] = 0x72;
    wiringPiSPIDataRW (mChannel, msg, 1);
	//now send the actual data!
//    for (unsigned i = 0; i < datasize; i++) {
//        msg[0] = data[i];
//        wiringPiSPIDataRW (mChannel, msg, 1);
//    }

    //TODO: or like this:
    wiringPiSPIDataRW (mChannel, data, datasize);

	digitalWrite(mCSPin, HIGH);
}

Epaper::~Epaper() {

}
