In archive libL3G.a:

L3G.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         00000a8c  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00000f94  00000000  00000000  00000ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN7TwoWire5writeEi 00000010  00000000  00000000  00001a54  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text._ZN3L3G8writeRegEhh 0000004c  00000000  00000000  00001a64  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN3L3G13enableDefaultEv 0000000a  00000000  00000000  00001ab0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN3L3G7readRegEh 00000052  00000000  00000000  00001aba  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN3L3G4readEv 000000f8  00000000  00000000  00001b0c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_ 00000164  00000000  00000000  00001c04  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN3L3G10vector_dotEPKNS_6vectorES2_ 00000088  00000000  00000000  00001d68  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._ZN3L3G16vector_normalizeEPNS_6vectorE 00000072  00000000  00000000  00001df0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text._ZN3L3G17autoDetectAddressEv 00000056  00000000  00000000  00001e62  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text._ZN3L3G4initEhh 00000040  00000000  00000000  00001eb8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text._ZN7TwoWire5writeEi:

00000000 <_ZN7TwoWire5writeEi>:

// Public Methods //////////////////////////////////////////////////////////////

bool L3G::init(byte device, byte sa0)
{  
	_device = device;
   0:	dc 01       	movw	r26, r24
   2:	ed 91       	ld	r30, X+
	switch (_device)
   4:	fc 91       	ld	r31, X
   6:	01 90       	ld	r0, Z+
   8:	f0 81       	ld	r31, Z
   a:	e0 2d       	mov	r30, r0
   c:	09 95       	icall
	{
	case L3G4200D_DEVICE:
		if (sa0 == L3G_SA0_LOW)
   e:	08 95       	ret

Disassembly of section .text._ZN3L3G8writeRegEhh:

00000000 <_ZN3L3G8writeRegEhh>:

// Public Methods //////////////////////////////////////////////////////////////

bool L3G::init(byte device, byte sa0)
{  
	_device = device;
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
	switch (_device)
   4:	1f 93       	push	r17
   6:	df 93       	push	r29
   8:	cf 93       	push	r28
   a:	0f 92       	push	r0
   c:	cd b7       	in	r28, 0x3d	; 61
	{
	case L3G4200D_DEVICE:
		if (sa0 == L3G_SA0_LOW)
   e:	de b7       	in	r29, 0x3e	; 62
  10:	fc 01       	movw	r30, r24
		{
			address = L3G4200D_ADDRESS_SA0_LOW;
  12:	16 2f       	mov	r17, r22
  14:	80 e0       	ldi	r24, 0x00	; 0
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  16:	e8 2e       	mov	r14, r24
  18:	80 e0       	ldi	r24, 0x00	; 0
		{
			address = L3G4200D_ADDRESS_SA0_HIGH;
  1a:	f8 2e       	mov	r15, r24
  1c:	c7 01       	movw	r24, r14
		else
			return autoDetectAddress();
		break;

	case L3GD20_DEVICE:
		if (sa0 == L3G_SA0_LOW)
  1e:	65 85       	ldd	r22, Z+13	; 0x0d
  20:	49 83       	std	Y+1, r20	; 0x01
		{
			address = L3GD20_ADDRESS_SA0_LOW;
  22:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G8writeRegEhh>
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  26:	c7 01       	movw	r24, r14
  28:	61 2f       	mov	r22, r17
		{
			address = L3GD20_ADDRESS_SA0_HIGH;
  2a:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G8writeRegEhh>
  2e:	c7 01       	movw	r24, r14
			return true;
  30:	49 81       	ldd	r20, Y+1	; 0x01
  32:	64 2f       	mov	r22, r20
		}
		else
			return autoDetectAddress();
  34:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G8writeRegEhh>
  38:	c7 01       	movw	r24, r14
		break;

	default:
		return autoDetectAddress();
  3a:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G8writeRegEhh>
	}
}
  3e:	0f 90       	pop	r0
  40:	cf 91       	pop	r28
  42:	df 91       	pop	r29
  44:	1f 91       	pop	r17
  46:	ff 90       	pop	r15
  48:	ef 90       	pop	r14
  4a:	08 95       	ret

Disassembly of section .text._ZN3L3G13enableDefaultEv:

00000000 <_ZN3L3G13enableDefaultEv>:

// Public Methods //////////////////////////////////////////////////////////////

bool L3G::init(byte device, byte sa0)
{  
	_device = device;
   0:	60 e2       	ldi	r22, 0x20	; 32
   2:	4f e0       	ldi	r20, 0x0F	; 15
	switch (_device)
   4:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G13enableDefaultEv>
   8:	08 95       	ret

Disassembly of section .text._ZN3L3G7readRegEh:

00000000 <_ZN3L3G7readRegEh>:

// Public Methods //////////////////////////////////////////////////////////////

bool L3G::init(byte device, byte sa0)
{  
	_device = device;
   0:	ff 92       	push	r15
   2:	0f 93       	push	r16
	switch (_device)
   4:	1f 93       	push	r17
   6:	cf 93       	push	r28
   8:	df 93       	push	r29
   a:	8c 01       	movw	r16, r24
   c:	f6 2e       	mov	r15, r22
	{
	case L3G4200D_DEVICE:
		if (sa0 == L3G_SA0_LOW)
   e:	c0 e0       	ldi	r28, 0x00	; 0
  10:	d0 e0       	ldi	r29, 0x00	; 0
		{
			address = L3G4200D_ADDRESS_SA0_LOW;
  12:	ce 01       	movw	r24, r28
  14:	f8 01       	movw	r30, r16
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  16:	65 85       	ldd	r22, Z+13	; 0x0d
  18:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G7readRegEh>
		{
			address = L3G4200D_ADDRESS_SA0_HIGH;
  1c:	ce 01       	movw	r24, r28
		else
			return autoDetectAddress();
		break;

	case L3GD20_DEVICE:
		if (sa0 == L3G_SA0_LOW)
  1e:	6f 2d       	mov	r22, r15
  20:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G7readRegEh>
		{
			address = L3GD20_ADDRESS_SA0_LOW;
  24:	ce 01       	movw	r24, r28
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  26:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G7readRegEh>
		{
			address = L3GD20_ADDRESS_SA0_HIGH;
  2a:	ce 01       	movw	r24, r28
  2c:	f8 01       	movw	r30, r16
  2e:	65 85       	ldd	r22, Z+13	; 0x0d
			return true;
  30:	41 e0       	ldi	r20, 0x01	; 1
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G7readRegEh>
		}
		else
			return autoDetectAddress();
  36:	ce 01       	movw	r24, r28
  38:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G7readRegEh>
		break;

	default:
		return autoDetectAddress();
  3c:	08 2f       	mov	r16, r24
	}
}
  3e:	ce 01       	movw	r24, r28
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G7readRegEh>
  44:	80 2f       	mov	r24, r16
  46:	df 91       	pop	r29
  48:	cf 91       	pop	r28
  4a:	1f 91       	pop	r17
  4c:	0f 91       	pop	r16
  4e:	ff 90       	pop	r15
  50:	08 95       	ret

Disassembly of section .text._ZN3L3G4readEv:

00000000 <_ZN3L3G4readEv>:

// Public Methods //////////////////////////////////////////////////////////////

bool L3G::init(byte device, byte sa0)
{  
	_device = device;
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
	switch (_device)
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
	{
	case L3G4200D_DEVICE:
		if (sa0 == L3G_SA0_LOW)
   e:	df 93       	push	r29
  10:	ec 01       	movw	r28, r24
		{
			address = L3G4200D_ADDRESS_SA0_LOW;
  12:	80 e0       	ldi	r24, 0x00	; 0
  14:	90 e0       	ldi	r25, 0x00	; 0
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  16:	6d 85       	ldd	r22, Y+13	; 0x0d
  18:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
		{
			address = L3G4200D_ADDRESS_SA0_HIGH;
  1c:	80 e0       	ldi	r24, 0x00	; 0
		else
			return autoDetectAddress();
		break;

	case L3GD20_DEVICE:
		if (sa0 == L3G_SA0_LOW)
  1e:	90 e0       	ldi	r25, 0x00	; 0
  20:	68 ea       	ldi	r22, 0xA8	; 168
		{
			address = L3GD20_ADDRESS_SA0_LOW;
  22:	70 e0       	ldi	r23, 0x00	; 0
  24:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  28:	80 e0       	ldi	r24, 0x00	; 0
		{
			address = L3GD20_ADDRESS_SA0_HIGH;
  2a:	90 e0       	ldi	r25, 0x00	; 0
  2c:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
			return true;
  30:	80 e0       	ldi	r24, 0x00	; 0
  32:	90 e0       	ldi	r25, 0x00	; 0
		}
		else
			return autoDetectAddress();
  34:	6d 85       	ldd	r22, Y+13	; 0x0d
  36:	46 e0       	ldi	r20, 0x06	; 6
  38:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
		break;

	default:
		return autoDetectAddress();
  3c:	80 e0       	ldi	r24, 0x00	; 0
	}
}
  3e:	90 e0       	ldi	r25, 0x00	; 0
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
  44:	86 30       	cpi	r24, 0x06	; 6
  46:	91 05       	cpc	r25, r1
  48:	04 f0       	brlt	.+0      	; 0x4a <_ZN3L3G4readEv+0x4a>
  4a:	80 e0       	ldi	r24, 0x00	; 0
  4c:	90 e0       	ldi	r25, 0x00	; 0
  4e:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
  52:	d8 2e       	mov	r13, r24
  54:	80 e0       	ldi	r24, 0x00	; 0
  56:	90 e0       	ldi	r25, 0x00	; 0
  58:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
  5c:	c8 2e       	mov	r12, r24
  5e:	80 e0       	ldi	r24, 0x00	; 0
  60:	90 e0       	ldi	r25, 0x00	; 0
  62:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
  66:	f8 2e       	mov	r15, r24
  68:	80 e0       	ldi	r24, 0x00	; 0
  6a:	90 e0       	ldi	r25, 0x00	; 0
  6c:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
  70:	e8 2e       	mov	r14, r24
  72:	80 e0       	ldi	r24, 0x00	; 0
  74:	90 e0       	ldi	r25, 0x00	; 0
  76:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
  7a:	18 2f       	mov	r17, r24
  7c:	80 e0       	ldi	r24, 0x00	; 0
  7e:	90 e0       	ldi	r25, 0x00	; 0
  80:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
  84:	08 2f       	mov	r16, r24
  86:	3c 2d       	mov	r19, r12
  88:	20 e0       	ldi	r18, 0x00	; 0
  8a:	6d 2d       	mov	r22, r13
  8c:	70 e0       	ldi	r23, 0x00	; 0
  8e:	62 2b       	or	r22, r18
  90:	73 2b       	or	r23, r19
  92:	88 27       	eor	r24, r24
  94:	77 fd       	sbrc	r23, 7
  96:	80 95       	com	r24
  98:	98 2f       	mov	r25, r24
  9a:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
  9e:	68 83       	st	Y, r22
  a0:	79 83       	std	Y+1, r23	; 0x01
  a2:	8a 83       	std	Y+2, r24	; 0x02
  a4:	9b 83       	std	Y+3, r25	; 0x03
  a6:	9e 2d       	mov	r25, r14
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	6f 2d       	mov	r22, r15
  ac:	70 e0       	ldi	r23, 0x00	; 0
  ae:	68 2b       	or	r22, r24
  b0:	79 2b       	or	r23, r25
  b2:	88 27       	eor	r24, r24
  b4:	77 fd       	sbrc	r23, 7
  b6:	80 95       	com	r24
  b8:	98 2f       	mov	r25, r24
  ba:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
  be:	6c 83       	std	Y+4, r22	; 0x04
  c0:	7d 83       	std	Y+5, r23	; 0x05
  c2:	8e 83       	std	Y+6, r24	; 0x06
  c4:	9f 83       	std	Y+7, r25	; 0x07
  c6:	90 2f       	mov	r25, r16
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	61 2f       	mov	r22, r17
  cc:	70 e0       	ldi	r23, 0x00	; 0
  ce:	68 2b       	or	r22, r24
  d0:	79 2b       	or	r23, r25
  d2:	88 27       	eor	r24, r24
  d4:	77 fd       	sbrc	r23, 7
  d6:	80 95       	com	r24
  d8:	98 2f       	mov	r25, r24
  da:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4readEv>
  de:	68 87       	std	Y+8, r22	; 0x08
  e0:	79 87       	std	Y+9, r23	; 0x09
  e2:	8a 87       	std	Y+10, r24	; 0x0a
  e4:	9b 87       	std	Y+11, r25	; 0x0b
  e6:	df 91       	pop	r29
  e8:	cf 91       	pop	r28
  ea:	1f 91       	pop	r17
  ec:	0f 91       	pop	r16
  ee:	ff 90       	pop	r15
  f0:	ef 90       	pop	r14
  f2:	df 90       	pop	r13
  f4:	cf 90       	pop	r12
  f6:	08 95       	ret

Disassembly of section .text._ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_:

00000000 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_>:

// Public Methods //////////////////////////////////////////////////////////////

bool L3G::init(byte device, byte sa0)
{  
	_device = device;
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
	switch (_device)
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
	{
	case L3G4200D_DEVICE:
		if (sa0 == L3G_SA0_LOW)
   e:	9f 92       	push	r9
  10:	af 92       	push	r10
		{
			address = L3G4200D_ADDRESS_SA0_LOW;
  12:	bf 92       	push	r11
  14:	cf 92       	push	r12
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  16:	df 92       	push	r13
  18:	ef 92       	push	r14
		{
			address = L3G4200D_ADDRESS_SA0_HIGH;
  1a:	ff 92       	push	r15
  1c:	0f 93       	push	r16
		else
			return autoDetectAddress();
		break;

	case L3GD20_DEVICE:
		if (sa0 == L3G_SA0_LOW)
  1e:	1f 93       	push	r17
  20:	df 93       	push	r29
		{
			address = L3GD20_ADDRESS_SA0_LOW;
  22:	cf 93       	push	r28
  24:	00 d0       	rcall	.+0      	; 0x26 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_+0x26>
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  26:	00 d0       	rcall	.+0      	; 0x28 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_+0x28>
  28:	00 d0       	rcall	.+0      	; 0x2a <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_+0x2a>
		{
			address = L3GD20_ADDRESS_SA0_HIGH;
  2a:	cd b7       	in	r28, 0x3d	; 61
  2c:	de b7       	in	r29, 0x3e	; 62
  2e:	8c 01       	movw	r16, r24
			return true;
  30:	7e 83       	std	Y+6, r23	; 0x06
  32:	6d 83       	std	Y+5, r22	; 0x05
		}
		else
			return autoDetectAddress();
  34:	1a 01       	movw	r2, r20
  36:	db 01       	movw	r26, r22
  38:	18 96       	adiw	r26, 0x08	; 8
		break;

	default:
		return autoDetectAddress();
  3a:	4d 90       	ld	r4, X+
  3c:	5d 90       	ld	r5, X+
	}
}
  3e:	6d 90       	ld	r6, X+
  40:	7c 90       	ld	r7, X
  42:	1b 97       	sbiw	r26, 0x0b	; 11
  44:	fc 01       	movw	r30, r24
  46:	c0 84       	ldd	r12, Z+8	; 0x08
  48:	d1 84       	ldd	r13, Z+9	; 0x09
  4a:	e2 84       	ldd	r14, Z+10	; 0x0a
  4c:	f3 84       	ldd	r15, Z+11	; 0x0b
  4e:	c3 01       	movw	r24, r6
  50:	b2 01       	movw	r22, r4
  52:	24 81       	ldd	r18, Z+4	; 0x04
  54:	35 81       	ldd	r19, Z+5	; 0x05
  56:	46 81       	ldd	r20, Z+6	; 0x06
  58:	57 81       	ldd	r21, Z+7	; 0x07
  5a:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_>
  5e:	4b 01       	movw	r8, r22
  60:	5c 01       	movw	r10, r24
  62:	c7 01       	movw	r24, r14
  64:	b6 01       	movw	r22, r12
  66:	ad 81       	ldd	r26, Y+5	; 0x05
  68:	be 81       	ldd	r27, Y+6	; 0x06
  6a:	14 96       	adiw	r26, 0x04	; 4
  6c:	2d 91       	ld	r18, X+
  6e:	3d 91       	ld	r19, X+
  70:	4d 91       	ld	r20, X+
  72:	5c 91       	ld	r21, X
  74:	17 97       	sbiw	r26, 0x07	; 7
  76:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_>
  7a:	9b 01       	movw	r18, r22
  7c:	ac 01       	movw	r20, r24
  7e:	c5 01       	movw	r24, r10
  80:	b4 01       	movw	r22, r8
  82:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_>
  86:	f1 01       	movw	r30, r2
  88:	60 83       	st	Z, r22
  8a:	71 83       	std	Z+1, r23	; 0x01
  8c:	82 83       	std	Z+2, r24	; 0x02
  8e:	93 83       	std	Z+3, r25	; 0x03
  90:	ad 81       	ldd	r26, Y+5	; 0x05
  92:	be 81       	ldd	r27, Y+6	; 0x06
  94:	8d 91       	ld	r24, X+
  96:	9d 91       	ld	r25, X+
  98:	0d 90       	ld	r0, X+
  9a:	bc 91       	ld	r27, X
  9c:	a0 2d       	mov	r26, r0
  9e:	89 83       	std	Y+1, r24	; 0x01
  a0:	9a 83       	std	Y+2, r25	; 0x02
  a2:	ab 83       	std	Y+3, r26	; 0x03
  a4:	bc 83       	std	Y+4, r27	; 0x04
  a6:	f8 01       	movw	r30, r16
  a8:	80 80       	ld	r8, Z
  aa:	91 80       	ldd	r9, Z+1	; 0x01
  ac:	a2 80       	ldd	r10, Z+2	; 0x02
  ae:	b3 80       	ldd	r11, Z+3	; 0x03
  b0:	c7 01       	movw	r24, r14
  b2:	b6 01       	movw	r22, r12
  b4:	29 81       	ldd	r18, Y+1	; 0x01
  b6:	3a 81       	ldd	r19, Y+2	; 0x02
  b8:	4b 81       	ldd	r20, Y+3	; 0x03
  ba:	5c 81       	ldd	r21, Y+4	; 0x04
  bc:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_>
  c0:	6b 01       	movw	r12, r22
  c2:	7c 01       	movw	r14, r24
  c4:	c5 01       	movw	r24, r10
  c6:	b4 01       	movw	r22, r8
  c8:	a3 01       	movw	r20, r6
  ca:	92 01       	movw	r18, r4
  cc:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_>
  d0:	9b 01       	movw	r18, r22
  d2:	ac 01       	movw	r20, r24
  d4:	c7 01       	movw	r24, r14
  d6:	b6 01       	movw	r22, r12
  d8:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_>
  dc:	d1 01       	movw	r26, r2
  de:	14 96       	adiw	r26, 0x04	; 4
  e0:	6d 93       	st	X+, r22
  e2:	7d 93       	st	X+, r23
  e4:	8d 93       	st	X+, r24
  e6:	9c 93       	st	X, r25
  e8:	17 97       	sbiw	r26, 0x07	; 7
  ea:	c5 01       	movw	r24, r10
  ec:	b4 01       	movw	r22, r8
  ee:	ed 81       	ldd	r30, Y+5	; 0x05
  f0:	fe 81       	ldd	r31, Y+6	; 0x06
  f2:	24 81       	ldd	r18, Z+4	; 0x04
  f4:	35 81       	ldd	r19, Z+5	; 0x05
  f6:	46 81       	ldd	r20, Z+6	; 0x06
  f8:	57 81       	ldd	r21, Z+7	; 0x07
  fa:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_>
  fe:	6b 01       	movw	r12, r22
 100:	7c 01       	movw	r14, r24
 102:	69 81       	ldd	r22, Y+1	; 0x01
 104:	7a 81       	ldd	r23, Y+2	; 0x02
 106:	8b 81       	ldd	r24, Y+3	; 0x03
 108:	9c 81       	ldd	r25, Y+4	; 0x04
 10a:	d8 01       	movw	r26, r16
 10c:	14 96       	adiw	r26, 0x04	; 4
 10e:	2d 91       	ld	r18, X+
 110:	3d 91       	ld	r19, X+
 112:	4d 91       	ld	r20, X+
 114:	5c 91       	ld	r21, X
 116:	17 97       	sbiw	r26, 0x07	; 7
 118:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_>
 11c:	9b 01       	movw	r18, r22
 11e:	ac 01       	movw	r20, r24
 120:	c7 01       	movw	r24, r14
 122:	b6 01       	movw	r22, r12
 124:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G12vector_crossEPKNS_6vectorES2_PS0_>
 128:	f1 01       	movw	r30, r2
 12a:	60 87       	std	Z+8, r22	; 0x08
 12c:	71 87       	std	Z+9, r23	; 0x09
 12e:	82 87       	std	Z+10, r24	; 0x0a
 130:	93 87       	std	Z+11, r25	; 0x0b
 132:	26 96       	adiw	r28, 0x06	; 6
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	f8 94       	cli
 138:	de bf       	out	0x3e, r29	; 62
 13a:	0f be       	out	0x3f, r0	; 63
 13c:	cd bf       	out	0x3d, r28	; 61
 13e:	cf 91       	pop	r28
 140:	df 91       	pop	r29
 142:	1f 91       	pop	r17
 144:	0f 91       	pop	r16
 146:	ff 90       	pop	r15
 148:	ef 90       	pop	r14
 14a:	df 90       	pop	r13
 14c:	cf 90       	pop	r12
 14e:	bf 90       	pop	r11
 150:	af 90       	pop	r10
 152:	9f 90       	pop	r9
 154:	8f 90       	pop	r8
 156:	7f 90       	pop	r7
 158:	6f 90       	pop	r6
 15a:	5f 90       	pop	r5
 15c:	4f 90       	pop	r4
 15e:	3f 90       	pop	r3
 160:	2f 90       	pop	r2
 162:	08 95       	ret

Disassembly of section .text._ZN3L3G10vector_dotEPKNS_6vectorES2_:

00000000 <_ZN3L3G10vector_dotEPKNS_6vectorES2_>:

// Public Methods //////////////////////////////////////////////////////////////

bool L3G::init(byte device, byte sa0)
{  
	_device = device;
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
	switch (_device)
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
	{
	case L3G4200D_DEVICE:
		if (sa0 == L3G_SA0_LOW)
   e:	df 93       	push	r29
  10:	ec 01       	movw	r28, r24
		{
			address = L3G4200D_ADDRESS_SA0_LOW;
  12:	8b 01       	movw	r16, r22
  14:	68 81       	ld	r22, Y
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  16:	79 81       	ldd	r23, Y+1	; 0x01
  18:	8a 81       	ldd	r24, Y+2	; 0x02
		{
			address = L3G4200D_ADDRESS_SA0_HIGH;
  1a:	9b 81       	ldd	r25, Y+3	; 0x03
  1c:	f8 01       	movw	r30, r16
		else
			return autoDetectAddress();
		break;

	case L3GD20_DEVICE:
		if (sa0 == L3G_SA0_LOW)
  1e:	20 81       	ld	r18, Z
  20:	31 81       	ldd	r19, Z+1	; 0x01
		{
			address = L3GD20_ADDRESS_SA0_LOW;
  22:	42 81       	ldd	r20, Z+2	; 0x02
  24:	53 81       	ldd	r21, Z+3	; 0x03
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  26:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G10vector_dotEPKNS_6vectorES2_>
		{
			address = L3GD20_ADDRESS_SA0_HIGH;
  2a:	6b 01       	movw	r12, r22
  2c:	7c 01       	movw	r14, r24
  2e:	6c 81       	ldd	r22, Y+4	; 0x04
			return true;
  30:	7d 81       	ldd	r23, Y+5	; 0x05
  32:	8e 81       	ldd	r24, Y+6	; 0x06
		}
		else
			return autoDetectAddress();
  34:	9f 81       	ldd	r25, Y+7	; 0x07
  36:	f8 01       	movw	r30, r16
  38:	24 81       	ldd	r18, Z+4	; 0x04
		break;

	default:
		return autoDetectAddress();
  3a:	35 81       	ldd	r19, Z+5	; 0x05
  3c:	46 81       	ldd	r20, Z+6	; 0x06
	}
}
  3e:	57 81       	ldd	r21, Z+7	; 0x07
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G10vector_dotEPKNS_6vectorES2_>
  44:	9b 01       	movw	r18, r22
  46:	ac 01       	movw	r20, r24
  48:	c7 01       	movw	r24, r14
  4a:	b6 01       	movw	r22, r12
  4c:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G10vector_dotEPKNS_6vectorES2_>
  50:	6b 01       	movw	r12, r22
  52:	7c 01       	movw	r14, r24
  54:	68 85       	ldd	r22, Y+8	; 0x08
  56:	79 85       	ldd	r23, Y+9	; 0x09
  58:	8a 85       	ldd	r24, Y+10	; 0x0a
  5a:	9b 85       	ldd	r25, Y+11	; 0x0b
  5c:	f8 01       	movw	r30, r16
  5e:	20 85       	ldd	r18, Z+8	; 0x08
  60:	31 85       	ldd	r19, Z+9	; 0x09
  62:	42 85       	ldd	r20, Z+10	; 0x0a
  64:	53 85       	ldd	r21, Z+11	; 0x0b
  66:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G10vector_dotEPKNS_6vectorES2_>
  6a:	9b 01       	movw	r18, r22
  6c:	ac 01       	movw	r20, r24
  6e:	c7 01       	movw	r24, r14
  70:	b6 01       	movw	r22, r12
  72:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G10vector_dotEPKNS_6vectorES2_>
  76:	df 91       	pop	r29
  78:	cf 91       	pop	r28
  7a:	1f 91       	pop	r17
  7c:	0f 91       	pop	r16
  7e:	ff 90       	pop	r15
  80:	ef 90       	pop	r14
  82:	df 90       	pop	r13
  84:	cf 90       	pop	r12
  86:	08 95       	ret

Disassembly of section .text._ZN3L3G16vector_normalizeEPNS_6vectorE:

00000000 <_ZN3L3G16vector_normalizeEPNS_6vectorE>:

// Public Methods //////////////////////////////////////////////////////////////

bool L3G::init(byte device, byte sa0)
{  
	_device = device;
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
	switch (_device)
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
	{
	case L3G4200D_DEVICE:
		if (sa0 == L3G_SA0_LOW)
   e:	be 01       	movw	r22, r28
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G16vector_normalizeEPNS_6vectorE>
		{
			address = L3G4200D_ADDRESS_SA0_LOW;
  14:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G16vector_normalizeEPNS_6vectorE>
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  18:	7b 01       	movw	r14, r22
		{
			address = L3G4200D_ADDRESS_SA0_HIGH;
  1a:	8c 01       	movw	r16, r24
  1c:	68 81       	ld	r22, Y
		else
			return autoDetectAddress();
		break;

	case L3GD20_DEVICE:
		if (sa0 == L3G_SA0_LOW)
  1e:	79 81       	ldd	r23, Y+1	; 0x01
  20:	8a 81       	ldd	r24, Y+2	; 0x02
		{
			address = L3GD20_ADDRESS_SA0_LOW;
  22:	9b 81       	ldd	r25, Y+3	; 0x03
  24:	a8 01       	movw	r20, r16
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  26:	97 01       	movw	r18, r14
  28:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G16vector_normalizeEPNS_6vectorE>
		{
			address = L3GD20_ADDRESS_SA0_HIGH;
  2c:	68 83       	st	Y, r22
  2e:	79 83       	std	Y+1, r23	; 0x01
			return true;
  30:	8a 83       	std	Y+2, r24	; 0x02
  32:	9b 83       	std	Y+3, r25	; 0x03
		}
		else
			return autoDetectAddress();
  34:	6c 81       	ldd	r22, Y+4	; 0x04
  36:	7d 81       	ldd	r23, Y+5	; 0x05
  38:	8e 81       	ldd	r24, Y+6	; 0x06
		break;

	default:
		return autoDetectAddress();
  3a:	9f 81       	ldd	r25, Y+7	; 0x07
  3c:	a8 01       	movw	r20, r16
	}
}
  3e:	97 01       	movw	r18, r14
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G16vector_normalizeEPNS_6vectorE>
  44:	6c 83       	std	Y+4, r22	; 0x04
  46:	7d 83       	std	Y+5, r23	; 0x05
  48:	8e 83       	std	Y+6, r24	; 0x06
  4a:	9f 83       	std	Y+7, r25	; 0x07
  4c:	68 85       	ldd	r22, Y+8	; 0x08
  4e:	79 85       	ldd	r23, Y+9	; 0x09
  50:	8a 85       	ldd	r24, Y+10	; 0x0a
  52:	9b 85       	ldd	r25, Y+11	; 0x0b
  54:	a8 01       	movw	r20, r16
  56:	97 01       	movw	r18, r14
  58:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G16vector_normalizeEPNS_6vectorE>
  5c:	68 87       	std	Y+8, r22	; 0x08
  5e:	79 87       	std	Y+9, r23	; 0x09
  60:	8a 87       	std	Y+10, r24	; 0x0a
  62:	9b 87       	std	Y+11, r25	; 0x0b
  64:	df 91       	pop	r29
  66:	cf 91       	pop	r28
  68:	1f 91       	pop	r17
  6a:	0f 91       	pop	r16
  6c:	ff 90       	pop	r15
  6e:	ef 90       	pop	r14
  70:	08 95       	ret

Disassembly of section .text._ZN3L3G17autoDetectAddressEv:

00000000 <_ZN3L3G17autoDetectAddressEv>:

// Public Methods //////////////////////////////////////////////////////////////

bool L3G::init(byte device, byte sa0)
{  
	_device = device;
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
	switch (_device)
   4:	ec 01       	movw	r28, r24
   6:	88 e6       	ldi	r24, 0x68	; 104
   8:	8d 87       	std	Y+13, r24	; 0x0d
   a:	ce 01       	movw	r24, r28
   c:	6f e0       	ldi	r22, 0x0F	; 15
	{
	case L3G4200D_DEVICE:
		if (sa0 == L3G_SA0_LOW)
   e:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G17autoDetectAddressEv>
		{
			address = L3G4200D_ADDRESS_SA0_LOW;
  12:	83 3d       	cpi	r24, 0xD3	; 211
  14:	01 f0       	breq	.+0      	; 0x16 <_ZN3L3G17autoDetectAddressEv+0x16>
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  16:	89 e6       	ldi	r24, 0x69	; 105
  18:	8d 87       	std	Y+13, r24	; 0x0d
		{
			address = L3G4200D_ADDRESS_SA0_HIGH;
  1a:	ce 01       	movw	r24, r28
  1c:	6f e0       	ldi	r22, 0x0F	; 15
		else
			return autoDetectAddress();
		break;

	case L3GD20_DEVICE:
		if (sa0 == L3G_SA0_LOW)
  1e:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G17autoDetectAddressEv>
		{
			address = L3GD20_ADDRESS_SA0_LOW;
  22:	83 3d       	cpi	r24, 0xD3	; 211
  24:	01 f0       	breq	.+0      	; 0x26 <_ZN3L3G17autoDetectAddressEv+0x26>
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  26:	8a e6       	ldi	r24, 0x6A	; 106
  28:	8d 87       	std	Y+13, r24	; 0x0d
		{
			address = L3GD20_ADDRESS_SA0_HIGH;
  2a:	ce 01       	movw	r24, r28
  2c:	6f e0       	ldi	r22, 0x0F	; 15
  2e:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G17autoDetectAddressEv>
			return true;
  32:	84 3d       	cpi	r24, 0xD4	; 212
		}
		else
			return autoDetectAddress();
  34:	01 f0       	breq	.+0      	; 0x36 <_ZN3L3G17autoDetectAddressEv+0x36>
  36:	8b e6       	ldi	r24, 0x6B	; 107
  38:	8d 87       	std	Y+13, r24	; 0x0d
		break;

	default:
		return autoDetectAddress();
  3a:	ce 01       	movw	r24, r28
  3c:	6f e0       	ldi	r22, 0x0F	; 15
	}
}
  3e:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G17autoDetectAddressEv>
  42:	91 e0       	ldi	r25, 0x01	; 1
  44:	84 3d       	cpi	r24, 0xD4	; 212
  46:	01 f0       	breq	.+0      	; 0x48 <_ZN3L3G17autoDetectAddressEv+0x48>
  48:	90 e0       	ldi	r25, 0x00	; 0
  4a:	00 c0       	rjmp	.+0      	; 0x4c <_ZN3L3G17autoDetectAddressEv+0x4c>
  4c:	91 e0       	ldi	r25, 0x01	; 1
  4e:	89 2f       	mov	r24, r25
  50:	df 91       	pop	r29
  52:	cf 91       	pop	r28
  54:	08 95       	ret

Disassembly of section .text._ZN3L3G4initEhh:

00000000 <_ZN3L3G4initEhh>:

// Public Methods //////////////////////////////////////////////////////////////

bool L3G::init(byte device, byte sa0)
{  
	_device = device;
   0:	fc 01       	movw	r30, r24
   2:	64 87       	std	Z+12, r22	; 0x0c
	switch (_device)
   4:	61 30       	cpi	r22, 0x01	; 1
   6:	01 f0       	breq	.+0      	; 0x8 <_ZN3L3G4initEhh+0x8>
   8:	62 30       	cpi	r22, 0x02	; 2
   a:	01 f4       	brne	.+0      	; 0xc <_ZN3L3G4initEhh+0xc>
   c:	00 c0       	rjmp	.+0      	; 0xe <_ZN3L3G4initEhh+0xe>
	{
	case L3G4200D_DEVICE:
		if (sa0 == L3G_SA0_LOW)
   e:	44 23       	and	r20, r20
  10:	01 f4       	brne	.+0      	; 0x12 <_ZN3L3G4initEhh+0x12>
		{
			address = L3G4200D_ADDRESS_SA0_LOW;
  12:	28 e6       	ldi	r18, 0x68	; 104
  14:	00 c0       	rjmp	.+0      	; 0x16 <_ZN3L3G4initEhh+0x16>
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  16:	41 30       	cpi	r20, 0x01	; 1
  18:	01 f4       	brne	.+0      	; 0x1a <_ZN3L3G4initEhh+0x1a>
		{
			address = L3G4200D_ADDRESS_SA0_HIGH;
  1a:	29 e6       	ldi	r18, 0x69	; 105
  1c:	00 c0       	rjmp	.+0      	; 0x1e <_ZN3L3G4initEhh+0x1e>
		else
			return autoDetectAddress();
		break;

	case L3GD20_DEVICE:
		if (sa0 == L3G_SA0_LOW)
  1e:	44 23       	and	r20, r20
  20:	01 f4       	brne	.+0      	; 0x22 <_ZN3L3G4initEhh+0x22>
		{
			address = L3GD20_ADDRESS_SA0_LOW;
  22:	2a e6       	ldi	r18, 0x6A	; 106
  24:	00 c0       	rjmp	.+0      	; 0x26 <_ZN3L3G4initEhh+0x26>
			return true;
		}
		else if (sa0 == L3G_SA0_HIGH)
  26:	41 30       	cpi	r20, 0x01	; 1
  28:	01 f4       	brne	.+0      	; 0x2a <_ZN3L3G4initEhh+0x2a>
		{
			address = L3GD20_ADDRESS_SA0_HIGH;
  2a:	2b e6       	ldi	r18, 0x6B	; 107
  2c:	fc 01       	movw	r30, r24
  2e:	25 87       	std	Z+13, r18	; 0x0d
			return true;
  30:	81 e0       	ldi	r24, 0x01	; 1
  32:	08 95       	ret
		}
		else
			return autoDetectAddress();
  34:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4initEhh>
  38:	08 95       	ret
		break;

	default:
		return autoDetectAddress();
  3a:	0e 94 00 00 	call	0	; 0x0 <_ZN3L3G4initEhh>
	}
}
  3e:	08 95       	ret
