In archive libLEDController.a:

LedControl.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         00000f30  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000011cd  00000000  00000000  00000f64  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN10LedControl14getDeviceCountEv 0000000c  00000000  00000000  00002131  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text._ZN10LedControl11spiTransferEihh 000000c8  00000000  00000000  0000213d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN10LedControl7setCharEiich 0000004c  00000000  00000000  00002205  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN10LedControl8setDigitEiihh 00000050  00000000  00000000  00002251  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN10LedControl6setRowEiih 0000003a  00000000  00000000  000022a1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN10LedControl6setLedEiiih 00000082  00000000  00000000  000022db  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN10LedControl9setColumnEiih 00000092  00000000  00000000  0000235d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._ZN10LedControl12clearDisplayEi 0000006e  00000000  00000000  000023ef  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text._ZN10LedControl12setIntensityEii 00000020  00000000  00000000  0000245d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text._ZN10LedControl12setScanLimitEii 00000020  00000000  00000000  0000247d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text._ZN10LedControl8shutdownEib 0000002c  00000000  00000000  0000249d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text._ZN10LedControlC2Eiiii 0000010c  00000000  00000000  000024c9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .rodata._ZL9charTable 00000080  00000000  00000000  000025d5  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN10LedControl14getDeviceCountEv:

00000000 <_ZN10LedControl14getDeviceCountEv>:
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
   0:	fc 01       	movw	r30, r24
   2:	ea 5a       	subi	r30, 0xAA	; 170
   4:	ff 4f       	sbci	r31, 0xFF	; 255
   6:	80 81       	ld	r24, Z
   8:	91 81       	ldd	r25, Z+1	; 0x01
   a:	08 95       	ret

Disassembly of section .text._ZN10LedControl11spiTransferEihh:

00000000 <_ZN10LedControl11spiTransferEihh>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	df 93       	push	r29
  16:	cf 93       	push	r28
  18:	00 d0       	rcall	.+0      	; 0x1a <_ZN10LedControl11spiTransferEihh+0x1a>
	SPI_MOSI=dataPin;
  1a:	cd b7       	in	r28, 0x3d	; 61
  1c:	de b7       	in	r29, 0x3e	; 62
  1e:	7c 01       	movw	r14, r24
  20:	49 83       	std	Y+1, r20	; 0x01
  22:	2a 83       	std	Y+2, r18	; 0x02
	SPI_CLK=clkPin;
  24:	66 0f       	add	r22, r22
  26:	77 1f       	adc	r23, r23
  28:	fc 01       	movw	r30, r24
  2a:	ea 5a       	subi	r30, 0xAA	; 170
  2c:	ff 4f       	sbci	r31, 0xFF	; 255
	SPI_CS=csPin;
  2e:	c0 80       	ld	r12, Z
  30:	d1 80       	ldd	r13, Z+1	; 0x01
  32:	cc 0c       	add	r12, r12
  34:	dd 1c       	adc	r13, r13
  36:	f7 01       	movw	r30, r14
	if(numDevices<=0 || numDevices>8 )
  38:	80 e0       	ldi	r24, 0x00	; 0
  3a:	90 e0       	ldi	r25, 0x00	; 0
  3c:	00 c0       	rjmp	.+0      	; 0x3e <_ZN10LedControl11spiTransferEihh+0x3e>
  3e:	11 92       	st	Z+, r1
  40:	01 96       	adiw	r24, 0x01	; 1
		numDevices=8;
  42:	8c 15       	cp	r24, r12
  44:	9d 05       	cpc	r25, r13
	maxDevices=numDevices;
  46:	04 f0       	brlt	.+0      	; 0x48 <_ZN10LedControl11spiTransferEihh+0x48>
  48:	89 81       	ldd	r24, Y+1	; 0x01
  4a:	f7 01       	movw	r30, r14
  4c:	e6 0f       	add	r30, r22
  4e:	f7 1f       	adc	r31, r23
	pinMode(SPI_MOSI,OUTPUT);
  50:	81 83       	std	Z+1, r24	; 0x01
  52:	8a 81       	ldd	r24, Y+2	; 0x02
  54:	80 83       	st	Z, r24
  56:	f7 01       	movw	r30, r14
  58:	ec 5a       	subi	r30, 0xAC	; 172
	pinMode(SPI_CLK,OUTPUT);
  5a:	ff 4f       	sbci	r31, 0xFF	; 255
  5c:	80 81       	ld	r24, Z
  5e:	60 e0       	ldi	r22, 0x00	; 0
  60:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl11spiTransferEihh>
  64:	57 01       	movw	r10, r14
  66:	ac 0c       	add	r10, r12
	pinMode(SPI_CS,OUTPUT);
  68:	bd 1c       	adc	r11, r13
  6a:	80 e5       	ldi	r24, 0x50	; 80
  6c:	88 2e       	mov	r8, r24
  6e:	91 2c       	mov	r9, r1
  70:	8e 0c       	add	r8, r14
  72:	9f 1c       	adc	r9, r15
  74:	87 01       	movw	r16, r14
  76:	0e 5a       	subi	r16, 0xAE	; 174
	digitalWrite(SPI_CS,HIGH);
  78:	1f 4f       	sbci	r17, 0xFF	; 255
  7a:	00 c0       	rjmp	.+0      	; 0x7c <_ZN10LedControl11spiTransferEihh+0x7c>
  7c:	f4 01       	movw	r30, r8
  7e:	80 81       	ld	r24, Z
  80:	f8 01       	movw	r30, r16
	SPI_MOSI=dataPin;
  82:	60 81       	ld	r22, Z
  84:	41 e0       	ldi	r20, 0x01	; 1
  86:	f5 01       	movw	r30, r10
  88:	22 91       	ld	r18, -Z
  8a:	5f 01       	movw	r10, r30
  8c:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl11spiTransferEihh>
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
  90:	08 94       	sec
	pinMode(SPI_MOSI,OUTPUT);
	pinMode(SPI_CLK,OUTPUT);
	pinMode(SPI_CS,OUTPUT);
	digitalWrite(SPI_CS,HIGH);
	SPI_MOSI=dataPin;
	for(int i=0;i<64;i++)
  92:	c1 08       	sbc	r12, r1
  94:	d1 08       	sbc	r13, r1
		status[i]=0x00;
  96:	1c 14       	cp	r1, r12
	pinMode(SPI_MOSI,OUTPUT);
	pinMode(SPI_CLK,OUTPUT);
	pinMode(SPI_CS,OUTPUT);
	digitalWrite(SPI_CS,HIGH);
	SPI_MOSI=dataPin;
	for(int i=0;i<64;i++)
  98:	1d 04       	cpc	r1, r13
  9a:	04 f0       	brlt	.+0      	; 0x9c <_ZN10LedControl11spiTransferEihh+0x9c>
  9c:	f7 01       	movw	r30, r14
  9e:	ec 5a       	subi	r30, 0xAC	; 172
  a0:	ff 4f       	sbci	r31, 0xFF	; 255
  a2:	80 81       	ld	r24, Z
		status[i]=0x00;
	for(int i=0;i<maxDevices;i++) {
  a4:	61 e0       	ldi	r22, 0x01	; 1
  a6:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl11spiTransferEihh>
  aa:	0f 90       	pop	r0
  ac:	0f 90       	pop	r0
  ae:	cf 91       	pop	r28
		spiTransfer(i,OP_DISPLAYTEST,0);
  b0:	df 91       	pop	r29
  b2:	1f 91       	pop	r17
  b4:	0f 91       	pop	r16
  b6:	ff 90       	pop	r15
  b8:	ef 90       	pop	r14
  ba:	df 90       	pop	r13
		//scanlimit is set to max on startup
		setScanLimit(i,7);
  bc:	cf 90       	pop	r12
  be:	bf 90       	pop	r11
  c0:	af 90       	pop	r10
  c2:	9f 90       	pop	r9
  c4:	8f 90       	pop	r8
  c6:	08 95       	ret

Disassembly of section .text._ZN10LedControl7setCharEiich:

00000000 <_ZN10LedControl7setCharEiich>:
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
   0:	0f 93       	push	r16
   2:	77 fd       	sbrc	r23, 7
   4:	00 c0       	rjmp	.+0      	; 0x6 <_ZN10LedControl7setCharEiich+0x6>
   6:	fc 01       	movw	r30, r24
   8:	ea 5a       	subi	r30, 0xAA	; 170
   a:	ff 4f       	sbci	r31, 0xFF	; 255
   c:	01 90       	ld	r0, Z+
   e:	f0 81       	ld	r31, Z
  10:	e0 2d       	mov	r30, r0
  12:	6e 17       	cp	r22, r30
  14:	7f 07       	cpc	r23, r31
  16:	04 f4       	brge	.+0      	; 0x18 <_ZN10LedControl7setCharEiich+0x18>
  18:	48 30       	cpi	r20, 0x08	; 8
	SPI_MOSI=dataPin;
  1a:	51 05       	cpc	r21, r1
  1c:	00 f4       	brcc	.+0      	; 0x1e <_ZN10LedControl7setCharEiich+0x1e>
  1e:	fb 01       	movw	r30, r22
  20:	33 e0       	ldi	r19, 0x03	; 3
  22:	ee 0f       	add	r30, r30
	SPI_CLK=clkPin;
  24:	ff 1f       	adc	r31, r31
  26:	3a 95       	dec	r19
  28:	01 f4       	brne	.+0      	; 0x2a <_ZN10LedControl7setCharEiich+0x2a>
  2a:	a2 2f       	mov	r26, r18
  2c:	b0 e0       	ldi	r27, 0x00	; 0
	SPI_CS=csPin;
  2e:	a0 50       	subi	r26, 0x00	; 0
  30:	b0 40       	sbci	r27, 0x00	; 0
  32:	2c 91       	ld	r18, X
  34:	01 11       	cpse	r16, r1
  36:	20 68       	ori	r18, 0x80	; 128
	if(numDevices<=0 || numDevices>8 )
  38:	e8 0f       	add	r30, r24
  3a:	f9 1f       	adc	r31, r25
  3c:	e4 0f       	add	r30, r20
  3e:	f5 1f       	adc	r31, r21
  40:	20 8b       	std	Z+16, r18	; 0x10
		numDevices=8;
  42:	4f 5f       	subi	r20, 0xFF	; 255
  44:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl7setCharEiich>
	maxDevices=numDevices;
  48:	0f 91       	pop	r16
  4a:	08 95       	ret

Disassembly of section .text._ZN10LedControl8setDigitEiihh:

00000000 <_ZN10LedControl8setDigitEiihh>:
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
   0:	0f 93       	push	r16
   2:	77 fd       	sbrc	r23, 7
   4:	00 c0       	rjmp	.+0      	; 0x6 <_ZN10LedControl8setDigitEiihh+0x6>
   6:	fc 01       	movw	r30, r24
   8:	ea 5a       	subi	r30, 0xAA	; 170
   a:	ff 4f       	sbci	r31, 0xFF	; 255
   c:	01 90       	ld	r0, Z+
   e:	f0 81       	ld	r31, Z
  10:	e0 2d       	mov	r30, r0
  12:	6e 17       	cp	r22, r30
  14:	7f 07       	cpc	r23, r31
  16:	04 f4       	brge	.+0      	; 0x18 <_ZN10LedControl8setDigitEiihh+0x18>
  18:	48 30       	cpi	r20, 0x08	; 8
	SPI_MOSI=dataPin;
  1a:	51 05       	cpc	r21, r1
  1c:	00 f4       	brcc	.+0      	; 0x1e <_ZN10LedControl8setDigitEiihh+0x1e>
  1e:	20 31       	cpi	r18, 0x10	; 16
  20:	00 f4       	brcc	.+0      	; 0x22 <_ZN10LedControl8setDigitEiihh+0x22>
  22:	fb 01       	movw	r30, r22
	SPI_CLK=clkPin;
  24:	a3 e0       	ldi	r26, 0x03	; 3
  26:	ee 0f       	add	r30, r30
  28:	ff 1f       	adc	r31, r31
  2a:	aa 95       	dec	r26
  2c:	01 f4       	brne	.+0      	; 0x2e <_ZN10LedControl8setDigitEiihh+0x2e>
	SPI_CS=csPin;
  2e:	a2 2f       	mov	r26, r18
  30:	b0 e0       	ldi	r27, 0x00	; 0
  32:	a0 50       	subi	r26, 0x00	; 0
  34:	b0 40       	sbci	r27, 0x00	; 0
  36:	2c 91       	ld	r18, X
	if(numDevices<=0 || numDevices>8 )
  38:	01 11       	cpse	r16, r1
  3a:	20 68       	ori	r18, 0x80	; 128
  3c:	e8 0f       	add	r30, r24
  3e:	f9 1f       	adc	r31, r25
  40:	e4 0f       	add	r30, r20
		numDevices=8;
  42:	f5 1f       	adc	r31, r21
  44:	20 8b       	std	Z+16, r18	; 0x10
	maxDevices=numDevices;
  46:	4f 5f       	subi	r20, 0xFF	; 255
  48:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl8setDigitEiihh>
  4c:	0f 91       	pop	r16
  4e:	08 95       	ret

Disassembly of section .text._ZN10LedControl6setRowEiih:

00000000 <_ZN10LedControl6setRowEiih>:
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
   0:	77 fd       	sbrc	r23, 7
   2:	00 c0       	rjmp	.+0      	; 0x4 <_ZN10LedControl6setRowEiih+0x4>
   4:	fc 01       	movw	r30, r24
   6:	ea 5a       	subi	r30, 0xAA	; 170
   8:	ff 4f       	sbci	r31, 0xFF	; 255
   a:	01 90       	ld	r0, Z+
   c:	f0 81       	ld	r31, Z
   e:	e0 2d       	mov	r30, r0
  10:	6e 17       	cp	r22, r30
  12:	7f 07       	cpc	r23, r31
  14:	04 f4       	brge	.+0      	; 0x16 <_ZN10LedControl6setRowEiih+0x16>
  16:	48 30       	cpi	r20, 0x08	; 8
  18:	51 05       	cpc	r21, r1
	SPI_MOSI=dataPin;
  1a:	00 f4       	brcc	.+0      	; 0x1c <_ZN10LedControl6setRowEiih+0x1c>
  1c:	fb 01       	movw	r30, r22
  1e:	b3 e0       	ldi	r27, 0x03	; 3
  20:	ee 0f       	add	r30, r30
  22:	ff 1f       	adc	r31, r31
	SPI_CLK=clkPin;
  24:	ba 95       	dec	r27
  26:	01 f4       	brne	.+0      	; 0x28 <_ZN10LedControl6setRowEiih+0x28>
  28:	e8 0f       	add	r30, r24
  2a:	f9 1f       	adc	r31, r25
  2c:	e4 0f       	add	r30, r20
	SPI_CS=csPin;
  2e:	f5 1f       	adc	r31, r21
  30:	20 8b       	std	Z+16, r18	; 0x10
  32:	4f 5f       	subi	r20, 0xFF	; 255
  34:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl6setRowEiih>
	if(numDevices<=0 || numDevices>8 )
  38:	08 95       	ret

Disassembly of section .text._ZN10LedControl6setLedEiiih:

00000000 <_ZN10LedControl6setLedEiiih>:
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
   0:	0f 93       	push	r16
   2:	cf 93       	push	r28
   4:	df 93       	push	r29
   6:	da 01       	movw	r26, r20
   8:	77 fd       	sbrc	r23, 7
   a:	00 c0       	rjmp	.+0      	; 0xc <_ZN10LedControl6setLedEiiih+0xc>
   c:	fc 01       	movw	r30, r24
   e:	ea 5a       	subi	r30, 0xAA	; 170
  10:	ff 4f       	sbci	r31, 0xFF	; 255
  12:	40 81       	ld	r20, Z
  14:	51 81       	ldd	r21, Z+1	; 0x01
  16:	64 17       	cp	r22, r20
  18:	75 07       	cpc	r23, r21
	SPI_MOSI=dataPin;
  1a:	04 f4       	brge	.+0      	; 0x1c <_ZN10LedControl6setLedEiiih+0x1c>
  1c:	a8 30       	cpi	r26, 0x08	; 8
  1e:	b1 05       	cpc	r27, r1
  20:	00 f4       	brcc	.+0      	; 0x22 <_ZN10LedControl6setLedEiiih+0x22>
  22:	37 fd       	sbrc	r19, 7
	SPI_CLK=clkPin;
  24:	00 c0       	rjmp	.+0      	; 0x26 <_ZN10LedControl6setLedEiiih+0x26>
  26:	28 30       	cpi	r18, 0x08	; 8
  28:	31 05       	cpc	r19, r1
  2a:	04 f4       	brge	.+0      	; 0x2c <_ZN10LedControl6setLedEiiih+0x2c>
  2c:	fb 01       	movw	r30, r22
	SPI_CS=csPin;
  2e:	33 e0       	ldi	r19, 0x03	; 3
  30:	ee 0f       	add	r30, r30
  32:	ff 1f       	adc	r31, r31
  34:	3a 95       	dec	r19
  36:	01 f4       	brne	.+0      	; 0x38 <_ZN10LedControl6setLedEiiih+0x38>
	if(numDevices<=0 || numDevices>8 )
  38:	40 e8       	ldi	r20, 0x80	; 128
  3a:	50 e0       	ldi	r21, 0x00	; 0
  3c:	00 c0       	rjmp	.+0      	; 0x3e <_ZN10LedControl6setLedEiiih+0x3e>
  3e:	55 95       	asr	r21
  40:	47 95       	ror	r20
		numDevices=8;
  42:	2a 95       	dec	r18
  44:	02 f4       	brpl	.+0      	; 0x46 <_ZN10LedControl6setLedEiiih+0x46>
	maxDevices=numDevices;
  46:	ef 01       	movw	r28, r30
  48:	ca 0f       	add	r28, r26
  4a:	db 1f       	adc	r29, r27
  4c:	00 23       	and	r16, r16
  4e:	01 f0       	breq	.+0      	; 0x50 <_ZN10LedControl6setLedEiiih+0x50>
	pinMode(SPI_MOSI,OUTPUT);
  50:	c8 0f       	add	r28, r24
  52:	d9 1f       	adc	r29, r25
  54:	28 89       	ldd	r18, Y+16	; 0x10
  56:	24 2b       	or	r18, r20
  58:	28 8b       	std	Y+16, r18	; 0x10
	pinMode(SPI_CLK,OUTPUT);
  5a:	00 c0       	rjmp	.+0      	; 0x5c <_ZN10LedControl6setLedEiiih+0x5c>
  5c:	c8 0f       	add	r28, r24
  5e:	d9 1f       	adc	r29, r25
  60:	40 95       	com	r20
  62:	28 89       	ldd	r18, Y+16	; 0x10
  64:	42 23       	and	r20, r18
  66:	48 8b       	std	Y+16, r20	; 0x10
	pinMode(SPI_CS,OUTPUT);
  68:	4a 2f       	mov	r20, r26
  6a:	4f 5f       	subi	r20, 0xFF	; 255
  6c:	e8 0f       	add	r30, r24
  6e:	f9 1f       	adc	r31, r25
  70:	ea 0f       	add	r30, r26
  72:	fb 1f       	adc	r31, r27
  74:	20 89       	ldd	r18, Z+16	; 0x10
  76:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl6setLedEiiih>
	digitalWrite(SPI_CS,HIGH);
  7a:	df 91       	pop	r29
  7c:	cf 91       	pop	r28
  7e:	0f 91       	pop	r16
  80:	08 95       	ret

Disassembly of section .text._ZN10LedControl9setColumnEiih:

00000000 <_ZN10LedControl9setColumnEiih>:
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
   0:	6f 92       	push	r6
   2:	7f 92       	push	r7
   4:	8f 92       	push	r8
   6:	9f 92       	push	r9
   8:	af 92       	push	r10
   a:	bf 92       	push	r11
   c:	cf 92       	push	r12
   e:	df 92       	push	r13
  10:	ef 92       	push	r14
  12:	ff 92       	push	r15
  14:	0f 93       	push	r16
  16:	1f 93       	push	r17
  18:	cf 93       	push	r28
	SPI_MOSI=dataPin;
  1a:	df 93       	push	r29
  1c:	5c 01       	movw	r10, r24
  1e:	7b 01       	movw	r14, r22
  20:	6a 01       	movw	r12, r20
  22:	77 fd       	sbrc	r23, 7
	SPI_CLK=clkPin;
  24:	00 c0       	rjmp	.+0      	; 0x26 <_ZN10LedControl9setColumnEiih+0x26>
  26:	fc 01       	movw	r30, r24
  28:	ea 5a       	subi	r30, 0xAA	; 170
  2a:	ff 4f       	sbci	r31, 0xFF	; 255
  2c:	80 81       	ld	r24, Z
	SPI_CS=csPin;
  2e:	91 81       	ldd	r25, Z+1	; 0x01
  30:	68 17       	cp	r22, r24
  32:	79 07       	cpc	r23, r25
  34:	04 f4       	brge	.+0      	; 0x36 <_ZN10LedControl9setColumnEiih+0x36>
  36:	48 30       	cpi	r20, 0x08	; 8
	if(numDevices<=0 || numDevices>8 )
  38:	51 05       	cpc	r21, r1
  3a:	00 f4       	brcc	.+0      	; 0x3c <_ZN10LedControl9setColumnEiih+0x3c>
  3c:	c0 e0       	ldi	r28, 0x00	; 0
  3e:	d0 e0       	ldi	r29, 0x00	; 0
  40:	62 2e       	mov	r6, r18
		numDevices=8;
  42:	77 24       	eor	r7, r7
  44:	47 e0       	ldi	r20, 0x07	; 7
	maxDevices=numDevices;
  46:	84 2e       	mov	r8, r20
  48:	91 2c       	mov	r9, r1
  4a:	84 01       	movw	r16, r8
  4c:	0c 1b       	sub	r16, r28
  4e:	1d 0b       	sbc	r17, r29
	pinMode(SPI_MOSI,OUTPUT);
  50:	c3 01       	movw	r24, r6
  52:	00 c0       	rjmp	.+0      	; 0x54 <_ZN10LedControl9setColumnEiih+0x54>
  54:	95 95       	asr	r25
  56:	87 95       	ror	r24
  58:	0a 95       	dec	r16
	pinMode(SPI_CLK,OUTPUT);
  5a:	02 f4       	brpl	.+0      	; 0x5c <_ZN10LedControl9setColumnEiih+0x5c>
  5c:	8c 01       	movw	r16, r24
  5e:	01 70       	andi	r16, 0x01	; 1
  60:	c5 01       	movw	r24, r10
  62:	b7 01       	movw	r22, r14
  64:	ae 01       	movw	r20, r28
  66:	96 01       	movw	r18, r12
	pinMode(SPI_CS,OUTPUT);
  68:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl9setColumnEiih>
  6c:	21 96       	adiw	r28, 0x01	; 1
  6e:	c8 30       	cpi	r28, 0x08	; 8
  70:	d1 05       	cpc	r29, r1
  72:	01 f4       	brne	.+0      	; 0x74 <_ZN10LedControl9setColumnEiih+0x74>
  74:	df 91       	pop	r29
  76:	cf 91       	pop	r28
	digitalWrite(SPI_CS,HIGH);
  78:	1f 91       	pop	r17
  7a:	0f 91       	pop	r16
  7c:	ff 90       	pop	r15
  7e:	ef 90       	pop	r14
  80:	df 90       	pop	r13
	SPI_MOSI=dataPin;
  82:	cf 90       	pop	r12
  84:	bf 90       	pop	r11
  86:	af 90       	pop	r10
  88:	9f 90       	pop	r9
  8a:	8f 90       	pop	r8
  8c:	7f 90       	pop	r7
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
  8e:	6f 90       	pop	r6
  90:	08 95       	ret

Disassembly of section .text._ZN10LedControl12clearDisplayEi:

00000000 <_ZN10LedControl12clearDisplayEi>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	6c 01       	movw	r12, r24
  12:	8b 01       	movw	r16, r22
  14:	77 fd       	sbrc	r23, 7
  16:	00 c0       	rjmp	.+0      	; 0x18 <_ZN10LedControl12clearDisplayEi+0x18>
  18:	fc 01       	movw	r30, r24
	SPI_MOSI=dataPin;
  1a:	ea 5a       	subi	r30, 0xAA	; 170
  1c:	ff 4f       	sbci	r31, 0xFF	; 255
  1e:	80 81       	ld	r24, Z
  20:	91 81       	ldd	r25, Z+1	; 0x01
  22:	68 17       	cp	r22, r24
	SPI_CLK=clkPin;
  24:	79 07       	cpc	r23, r25
  26:	04 f4       	brge	.+0      	; 0x28 <_ZN10LedControl12clearDisplayEi+0x28>
  28:	eb 01       	movw	r28, r22
  2a:	63 e0       	ldi	r22, 0x03	; 3
  2c:	cc 0f       	add	r28, r28
	SPI_CS=csPin;
  2e:	dd 1f       	adc	r29, r29
  30:	6a 95       	dec	r22
  32:	01 f4       	brne	.+0      	; 0x34 <_ZN10LedControl12clearDisplayEi+0x34>
  34:	60 96       	adiw	r28, 0x10	; 16
  36:	cc 0d       	add	r28, r12
	if(numDevices<=0 || numDevices>8 )
  38:	dd 1d       	adc	r29, r13
  3a:	51 e0       	ldi	r21, 0x01	; 1
  3c:	e5 2e       	mov	r14, r21
  3e:	f1 2c       	mov	r15, r1
  40:	19 92       	st	Y+, r1
		numDevices=8;
  42:	c6 01       	movw	r24, r12
  44:	b8 01       	movw	r22, r16
	maxDevices=numDevices;
  46:	4e 2d       	mov	r20, r14
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl12clearDisplayEi>
  4e:	08 94       	sec
	pinMode(SPI_MOSI,OUTPUT);
  50:	e1 1c       	adc	r14, r1
  52:	f1 1c       	adc	r15, r1
  54:	89 e0       	ldi	r24, 0x09	; 9
  56:	e8 16       	cp	r14, r24
  58:	f1 04       	cpc	r15, r1
	pinMode(SPI_CLK,OUTPUT);
  5a:	01 f4       	brne	.+0      	; 0x5c <_ZN10LedControl12clearDisplayEi+0x5c>
  5c:	df 91       	pop	r29
  5e:	cf 91       	pop	r28
  60:	1f 91       	pop	r17
  62:	0f 91       	pop	r16
  64:	ff 90       	pop	r15
  66:	ef 90       	pop	r14
	pinMode(SPI_CS,OUTPUT);
  68:	df 90       	pop	r13
  6a:	cf 90       	pop	r12
  6c:	08 95       	ret

Disassembly of section .text._ZN10LedControl12setIntensityEii:

00000000 <_ZN10LedControl12setIntensityEii>:
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
   0:	24 2f       	mov	r18, r20
   2:	77 fd       	sbrc	r23, 7
   4:	00 c0       	rjmp	.+0      	; 0x6 <_ZN10LedControl12setIntensityEii+0x6>
   6:	fc 01       	movw	r30, r24
   8:	ea 5a       	subi	r30, 0xAA	; 170
   a:	ff 4f       	sbci	r31, 0xFF	; 255
   c:	01 90       	ld	r0, Z+
   e:	f0 81       	ld	r31, Z
  10:	e0 2d       	mov	r30, r0
  12:	6e 17       	cp	r22, r30
  14:	7f 07       	cpc	r23, r31
  16:	04 f4       	brge	.+0      	; 0x18 <_ZN10LedControl12setIntensityEii+0x18>
  18:	4a e0       	ldi	r20, 0x0A	; 10
	SPI_MOSI=dataPin;
  1a:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl12setIntensityEii>
  1e:	08 95       	ret

Disassembly of section .text._ZN10LedControl12setScanLimitEii:

00000000 <_ZN10LedControl12setScanLimitEii>:
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
   0:	24 2f       	mov	r18, r20
   2:	77 fd       	sbrc	r23, 7
   4:	00 c0       	rjmp	.+0      	; 0x6 <_ZN10LedControl12setScanLimitEii+0x6>
   6:	fc 01       	movw	r30, r24
   8:	ea 5a       	subi	r30, 0xAA	; 170
   a:	ff 4f       	sbci	r31, 0xFF	; 255
   c:	01 90       	ld	r0, Z+
   e:	f0 81       	ld	r31, Z
  10:	e0 2d       	mov	r30, r0
  12:	6e 17       	cp	r22, r30
  14:	7f 07       	cpc	r23, r31
  16:	04 f4       	brge	.+0      	; 0x18 <_ZN10LedControl12setScanLimitEii+0x18>
  18:	4b e0       	ldi	r20, 0x0B	; 11
	SPI_MOSI=dataPin;
  1a:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl12setScanLimitEii>
  1e:	08 95       	ret

Disassembly of section .text._ZN10LedControl8shutdownEib:

00000000 <_ZN10LedControl8shutdownEib>:
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
   0:	77 fd       	sbrc	r23, 7
   2:	00 c0       	rjmp	.+0      	; 0x4 <_ZN10LedControl8shutdownEib+0x4>
   4:	fc 01       	movw	r30, r24
   6:	ea 5a       	subi	r30, 0xAA	; 170
   8:	ff 4f       	sbci	r31, 0xFF	; 255
   a:	20 81       	ld	r18, Z
   c:	31 81       	ldd	r19, Z+1	; 0x01
   e:	62 17       	cp	r22, r18
  10:	73 07       	cpc	r23, r19
  12:	04 f4       	brge	.+0      	; 0x14 <_ZN10LedControl8shutdownEib+0x14>
  14:	44 23       	and	r20, r20
  16:	01 f0       	breq	.+0      	; 0x18 <_ZN10LedControl8shutdownEib+0x18>
  18:	4c e0       	ldi	r20, 0x0C	; 12
	SPI_MOSI=dataPin;
  1a:	20 e0       	ldi	r18, 0x00	; 0
  1c:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl8shutdownEib>
  20:	08 95       	ret
  22:	4c e0       	ldi	r20, 0x0C	; 12
	SPI_CLK=clkPin;
  24:	21 e0       	ldi	r18, 0x01	; 1
  26:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControl8shutdownEib>
  2a:	08 95       	ret

Disassembly of section .text._ZN10LedControlC2Eiiii:

00000000 <_ZN10LedControlC1Eiiii>:
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	df 93       	push	r29
   e:	cf 93       	push	r28
  10:	0f 92       	push	r0
  12:	cd b7       	in	r28, 0x3d	; 61
  14:	de b7       	in	r29, 0x3e	; 62
  16:	6c 01       	movw	r12, r24
  18:	f6 2e       	mov	r15, r22
	SPI_MOSI=dataPin;
  1a:	fc 01       	movw	r30, r24
  1c:	e0 5b       	subi	r30, 0xB0	; 176
  1e:	ff 4f       	sbci	r31, 0xFF	; 255
  20:	60 83       	st	Z, r22
  22:	71 83       	std	Z+1, r23	; 0x01
	SPI_CLK=clkPin;
  24:	fc 01       	movw	r30, r24
  26:	ee 5a       	subi	r30, 0xAE	; 174
  28:	ff 4f       	sbci	r31, 0xFF	; 255
  2a:	51 83       	std	Z+1, r21	; 0x01
  2c:	40 83       	st	Z, r20
	SPI_CS=csPin;
  2e:	fc 01       	movw	r30, r24
  30:	ec 5a       	subi	r30, 0xAC	; 172
  32:	ff 4f       	sbci	r31, 0xFF	; 255
  34:	31 83       	std	Z+1, r19	; 0x01
  36:	20 83       	st	Z, r18
	if(numDevices<=0 || numDevices>8 )
  38:	c8 01       	movw	r24, r16
  3a:	01 97       	sbiw	r24, 0x01	; 1
  3c:	88 30       	cpi	r24, 0x08	; 8
  3e:	91 05       	cpc	r25, r1
  40:	00 f0       	brcs	.+0      	; 0x42 <_ZN10LedControlC1Eiiii+0x42>
		numDevices=8;
  42:	08 e0       	ldi	r16, 0x08	; 8
  44:	10 e0       	ldi	r17, 0x00	; 0
	maxDevices=numDevices;
  46:	f6 01       	movw	r30, r12
  48:	ea 5a       	subi	r30, 0xAA	; 170
  4a:	ff 4f       	sbci	r31, 0xFF	; 255
  4c:	11 83       	std	Z+1, r17	; 0x01
  4e:	00 83       	st	Z, r16
	pinMode(SPI_MOSI,OUTPUT);
  50:	8f 2d       	mov	r24, r15
  52:	61 e0       	ldi	r22, 0x01	; 1
  54:	79 83       	std	Y+1, r23	; 0x01
  56:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControlC1Eiiii>
	pinMode(SPI_CLK,OUTPUT);
  5a:	f6 01       	movw	r30, r12
  5c:	ee 5a       	subi	r30, 0xAE	; 174
  5e:	ff 4f       	sbci	r31, 0xFF	; 255
  60:	80 81       	ld	r24, Z
  62:	61 e0       	ldi	r22, 0x01	; 1
  64:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControlC1Eiiii>
	pinMode(SPI_CS,OUTPUT);
  68:	86 01       	movw	r16, r12
  6a:	0c 5a       	subi	r16, 0xAC	; 172
  6c:	1f 4f       	sbci	r17, 0xFF	; 255
  6e:	d8 01       	movw	r26, r16
  70:	8c 91       	ld	r24, X
  72:	61 e0       	ldi	r22, 0x01	; 1
  74:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControlC1Eiiii>
	digitalWrite(SPI_CS,HIGH);
  78:	f8 01       	movw	r30, r16
  7a:	80 81       	ld	r24, Z
  7c:	61 e0       	ldi	r22, 0x01	; 1
  7e:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControlC1Eiiii>
	SPI_MOSI=dataPin;
  82:	f6 01       	movw	r30, r12
  84:	e0 5b       	subi	r30, 0xB0	; 176
  86:	ff 4f       	sbci	r31, 0xFF	; 255
  88:	f0 82       	st	Z, r15
  8a:	79 81       	ldd	r23, Y+1	; 0x01
  8c:	71 83       	std	Z+1, r23	; 0x01
#define OP_INTENSITY   10
#define OP_SCANLIMIT   11
#define OP_SHUTDOWN    12
#define OP_DISPLAYTEST 15

LedControl::LedControl(int dataPin, int clkPin, int csPin, int numDevices) {
  8e:	f6 01       	movw	r30, r12
  90:	70 96       	adiw	r30, 0x10	; 16
	pinMode(SPI_MOSI,OUTPUT);
	pinMode(SPI_CLK,OUTPUT);
	pinMode(SPI_CS,OUTPUT);
	digitalWrite(SPI_CS,HIGH);
	SPI_MOSI=dataPin;
	for(int i=0;i<64;i++)
  92:	80 e0       	ldi	r24, 0x00	; 0
  94:	90 e0       	ldi	r25, 0x00	; 0
		status[i]=0x00;
  96:	11 92       	st	Z+, r1
	pinMode(SPI_MOSI,OUTPUT);
	pinMode(SPI_CLK,OUTPUT);
	pinMode(SPI_CS,OUTPUT);
	digitalWrite(SPI_CS,HIGH);
	SPI_MOSI=dataPin;
	for(int i=0;i<64;i++)
  98:	01 96       	adiw	r24, 0x01	; 1
  9a:	80 34       	cpi	r24, 0x40	; 64
  9c:	91 05       	cpc	r25, r1
  9e:	01 f4       	brne	.+0      	; 0xa0 <_ZN10LedControlC1Eiiii+0xa0>
  a0:	00 e0       	ldi	r16, 0x00	; 0
  a2:	10 e0       	ldi	r17, 0x00	; 0
		status[i]=0x00;
	for(int i=0;i<maxDevices;i++) {
  a4:	76 e5       	ldi	r23, 0x56	; 86
  a6:	e7 2e       	mov	r14, r23
  a8:	f1 2c       	mov	r15, r1
  aa:	ec 0c       	add	r14, r12
  ac:	fd 1c       	adc	r15, r13
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <_ZN10LedControlC1Eiiii+0xb0>
		spiTransfer(i,OP_DISPLAYTEST,0);
  b0:	c6 01       	movw	r24, r12
  b2:	b8 01       	movw	r22, r16
  b4:	4f e0       	ldi	r20, 0x0F	; 15
  b6:	20 e0       	ldi	r18, 0x00	; 0
  b8:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControlC1Eiiii>
		//scanlimit is set to max on startup
		setScanLimit(i,7);
  bc:	c6 01       	movw	r24, r12
  be:	b8 01       	movw	r22, r16
  c0:	47 e0       	ldi	r20, 0x07	; 7
  c2:	50 e0       	ldi	r21, 0x00	; 0
  c4:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControlC1Eiiii>
		//decode is done in source
		spiTransfer(i,OP_DECODEMODE,0);
  c8:	c6 01       	movw	r24, r12
  ca:	b8 01       	movw	r22, r16
  cc:	49 e0       	ldi	r20, 0x09	; 9
  ce:	20 e0       	ldi	r18, 0x00	; 0
  d0:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControlC1Eiiii>
		clearDisplay(i);
  d4:	c6 01       	movw	r24, r12
  d6:	b8 01       	movw	r22, r16
  d8:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControlC1Eiiii>
		//we go into shutdown-mode on startup
		shutdown(i,true);
  dc:	c6 01       	movw	r24, r12
  de:	b8 01       	movw	r22, r16
  e0:	41 e0       	ldi	r20, 0x01	; 1
  e2:	0e 94 00 00 	call	0	; 0x0 <_ZN10LedControlC1Eiiii>
	pinMode(SPI_CS,OUTPUT);
	digitalWrite(SPI_CS,HIGH);
	SPI_MOSI=dataPin;
	for(int i=0;i<64;i++)
		status[i]=0x00;
	for(int i=0;i<maxDevices;i++) {
  e6:	0f 5f       	subi	r16, 0xFF	; 255
  e8:	1f 4f       	sbci	r17, 0xFF	; 255
  ea:	d7 01       	movw	r26, r14
  ec:	8d 91       	ld	r24, X+
  ee:	9c 91       	ld	r25, X
  f0:	11 97       	sbiw	r26, 0x01	; 1
  f2:	08 17       	cp	r16, r24
  f4:	19 07       	cpc	r17, r25
  f6:	04 f0       	brlt	.+0      	; 0xf8 <_ZN10LedControlC1Eiiii+0xf8>
		spiTransfer(i,OP_DECODEMODE,0);
		clearDisplay(i);
		//we go into shutdown-mode on startup
		shutdown(i,true);
	}
}
  f8:	0f 90       	pop	r0
  fa:	cf 91       	pop	r28
  fc:	df 91       	pop	r29
  fe:	1f 91       	pop	r17
 100:	0f 91       	pop	r16
 102:	ff 90       	pop	r15
 104:	ef 90       	pop	r14
 106:	df 90       	pop	r13
 108:	cf 90       	pop	r12
 10a:	08 95       	ret
